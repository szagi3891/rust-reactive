[env]
PROFIE="dev"

[env.profiling]
PROFILE="profiling"

[env.release]
PROFILE="release"

[config]
default_to_workspace = false

[tasks.app-watch]
command = "cargo"
args = [ "watch", "--watch", "./app", "--watch", "crates", "--delay", "0.5", "-x", "make app-start --profile ${PROFILE}" ]

[tasks.app-clean]
script = "rm -Rf ./build"

[tasks.app-build]
install_script = '''
    if [ "$(rustup target list | grep wasm32-unknown-unknown | grep installed)" = "" ];
    then
        rustup target add wasm32-unknown-unknown;
    fi
'''
install_crate = { crate_name = "wasm-pack", binary = "wasm-pack", test_arg = ["--version"] }
script = [
    "wasm-pack build app --no-typescript --target web --out-dir ../build --out-name app --${PROFILE}",
    "cp ./app/index.html ./build",
    "rm ./build/.gitignore",
    "rm ./build/package.json",
]

[tasks.app-serve]
install_crate = { crate_name = "basic-http-server", binary = "basic-http-server", test_arg = ["--version"] }
command = "basic-http-server"
args = [ "--addr", "127.0.0.1:3000", "./build" ]

[tasks.app-start]
dependencies = [
    "app-clean",
    "app-build",
    "app-serve"
]

[tasks.upgrade-wasm-pack]
script = [
    "cargo install --force wasm-pack",
    "cargo clean",
]
